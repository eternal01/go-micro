// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package server

import (
	"context"

	"go-micro/platform/account/rpc/account"
	"go-micro/platform/account/rpc/internal/logic"
	"go-micro/platform/account/rpc/internal/svc"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	account.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

func (s *UsercenterServer) Login(ctx context.Context, in *account.LoginRequest) (*account.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsercenterServer) Register(ctx context.Context, in *account.RegisterRequest) (*account.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UsercenterServer) GetUser(ctx context.Context, in *account.GetUserRequest) (*account.GetUserResponse, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UsercenterServer) GetUserAuthByAuthKey(ctx context.Context, in *account.GetUserAuthByAuthKeyRequest) (*account.GetUserAuthByAuthKeyResponse, error) {
	l := logic.NewGetUserAuthByAuthKeyLogic(ctx, s.svcCtx)
	return l.GetUserAuthByAuthKey(in)
}

func (s *UsercenterServer) GetUserAuthByUserId(ctx context.Context, in *account.GetUserAuthByUserIdRequest) (*account.GetUserAuthByUserIdResponse, error) {
	l := logic.NewGetUserAuthByUserIdLogic(ctx, s.svcCtx)
	return l.GetUserAuthByUserId(in)
}

func (s *UsercenterServer) GenerateToken(ctx context.Context, in *account.GenerateTokenRequest) (*account.GenerateTokenResponse, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}
