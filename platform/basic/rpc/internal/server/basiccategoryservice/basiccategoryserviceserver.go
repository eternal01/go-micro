// Code generated by goctl. DO NOT EDIT.
// Source: basic.proto

package server

import (
	"context"

	"go-micro/platform/basic/rpc/basic"
	"go-micro/platform/basic/rpc/internal/logic/basiccategoryservice"
	"go-micro/platform/basic/rpc/internal/svc"
)

type BasicCategoryServiceServer struct {
	svcCtx *svc.ServiceContext
	basic.UnimplementedBasicCategoryServiceServer
}

func NewBasicCategoryServiceServer(svcCtx *svc.ServiceContext) *BasicCategoryServiceServer {
	return &BasicCategoryServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取类别信息
func (s *BasicCategoryServiceServer) GetCategory(ctx context.Context, in *basic.GetCategoryRequest) (*basic.GetCategoryResponse, error) {
	l := basiccategoryservicelogic.NewGetCategoryLogic(ctx, s.svcCtx)
	return l.GetCategory(in)
}

// 根据父级id获取类别信息
func (s *BasicCategoryServiceServer) GetCategories(ctx context.Context, in *basic.GetCategoriesRequest) (*basic.GetCategoriesResponse, error) {
	l := basiccategoryservicelogic.NewGetCategoriesLogic(ctx, s.svcCtx)
	return l.GetCategories(in)
}

// 添加类别信息
func (s *BasicCategoryServiceServer) AddCategory(ctx context.Context, in *basic.AddCategoryRequest) (*basic.AddCategoryResponse, error) {
	l := basiccategoryservicelogic.NewAddCategoryLogic(ctx, s.svcCtx)
	return l.AddCategory(in)
}

// 更新类别信息
func (s *BasicCategoryServiceServer) UpdateCategory(ctx context.Context, in *basic.UpdateCategoryRequest) (*basic.UpdateCategoryResponse, error) {
	l := basiccategoryservicelogic.NewUpdateCategoryLogic(ctx, s.svcCtx)
	return l.UpdateCategory(in)
}

// 删除类别信息
func (s *BasicCategoryServiceServer) DeleteCategory(ctx context.Context, in *basic.DeleteCategoryRequest) (*basic.DeleteCategoryResponse, error) {
	l := basiccategoryservicelogic.NewDeleteCategoryLogic(ctx, s.svcCtx)
	return l.DeleteCategory(in)
}
