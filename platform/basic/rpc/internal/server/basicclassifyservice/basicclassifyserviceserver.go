// Code generated by goctl. DO NOT EDIT.
// Source: basic.proto

package server

import (
	"context"

	"go-micro/platform/basic/rpc/basic"
	"go-micro/platform/basic/rpc/internal/logic/basicclassifyservice"
	"go-micro/platform/basic/rpc/internal/svc"
)

type BasicClassifyServiceServer struct {
	svcCtx *svc.ServiceContext
	basic.UnimplementedBasicClassifyServiceServer
}

func NewBasicClassifyServiceServer(svcCtx *svc.ServiceContext) *BasicClassifyServiceServer {
	return &BasicClassifyServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取分类信息
func (s *BasicClassifyServiceServer) GetClassify(ctx context.Context, in *basic.GetClassifyRequest) (*basic.GetClassifyResponse, error) {
	l := basicclassifyservicelogic.NewGetClassifyLogic(ctx, s.svcCtx)
	return l.GetClassify(in)
}

// 根据父级id获取分类信息
func (s *BasicClassifyServiceServer) GetClassifies(ctx context.Context, in *basic.GetClassifiesRequest) (*basic.GetClassifiesResponse, error) {
	l := basicclassifyservicelogic.NewGetClassifiesLogic(ctx, s.svcCtx)
	return l.GetClassifies(in)
}

// 添加分类信息
func (s *BasicClassifyServiceServer) AddClassify(ctx context.Context, in *basic.AddClassifyRequest) (*basic.AddClassifyResponse, error) {
	l := basicclassifyservicelogic.NewAddClassifyLogic(ctx, s.svcCtx)
	return l.AddClassify(in)
}

// 更新分类信息
func (s *BasicClassifyServiceServer) UpdateClassify(ctx context.Context, in *basic.UpdateClassifyRequest) (*basic.UpdateClassifyResponse, error) {
	l := basicclassifyservicelogic.NewUpdateClassifyLogic(ctx, s.svcCtx)
	return l.UpdateClassify(in)
}

// 删除分类信息
func (s *BasicClassifyServiceServer) DeleteClassify(ctx context.Context, in *basic.DeleteClassifyRequest) (*basic.DeleteClassifyResponse, error) {
	l := basicclassifyservicelogic.NewDeleteClassifyLogic(ctx, s.svcCtx)
	return l.DeleteClassify(in)
}
