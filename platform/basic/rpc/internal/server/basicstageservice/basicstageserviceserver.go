// Code generated by goctl. DO NOT EDIT.
// Source: basic.proto

package server

import (
	"context"

	"go-micro/platform/basic/rpc/basic"
	"go-micro/platform/basic/rpc/internal/logic/basicstageservice"
	"go-micro/platform/basic/rpc/internal/svc"
)

type BasicStageServiceServer struct {
	svcCtx *svc.ServiceContext
	basic.UnimplementedBasicStageServiceServer
}

func NewBasicStageServiceServer(svcCtx *svc.ServiceContext) *BasicStageServiceServer {
	return &BasicStageServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取阶段信息
func (s *BasicStageServiceServer) GetStage(ctx context.Context, in *basic.GetStageRequest) (*basic.GetStageResponse, error) {
	l := basicstageservicelogic.NewGetStageLogic(ctx, s.svcCtx)
	return l.GetStage(in)
}

// 根据父级id获取阶段信息
func (s *BasicStageServiceServer) GetStages(ctx context.Context, in *basic.GetStagesRequest) (*basic.GetStagesResponse, error) {
	l := basicstageservicelogic.NewGetStagesLogic(ctx, s.svcCtx)
	return l.GetStages(in)
}

// 添加阶段信息
func (s *BasicStageServiceServer) AddStage(ctx context.Context, in *basic.AddStageRequest) (*basic.AddStageResponse, error) {
	l := basicstageservicelogic.NewAddStageLogic(ctx, s.svcCtx)
	return l.AddStage(in)
}

// 更新阶段信息
func (s *BasicStageServiceServer) UpdateStage(ctx context.Context, in *basic.UpdateStageRequest) (*basic.UpdateStageResponse, error) {
	l := basicstageservicelogic.NewUpdateStageLogic(ctx, s.svcCtx)
	return l.UpdateStage(in)
}

// 删除阶段信息
func (s *BasicStageServiceServer) DeleteStage(ctx context.Context, in *basic.DeleteStageRequest) (*basic.DeleteStageResponse, error) {
	l := basicstageservicelogic.NewDeleteStageLogic(ctx, s.svcCtx)
	return l.DeleteStage(in)
}
