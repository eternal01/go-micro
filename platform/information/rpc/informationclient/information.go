// Code generated by goctl. DO NOT EDIT.
// Source: information.proto

package informationclient

import (
	"context"

	"go-micro/platform/information/rpc/information"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = information.Request
	Response = information.Response

	Information interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultInformation struct {
		cli zrpc.Client
	}
)

func NewInformation(cli zrpc.Client) Information {
	return &defaultInformation{
		cli: cli,
	}
}

func (m *defaultInformation) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := information.NewInformationClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
