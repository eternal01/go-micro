// Code generated by goctl. DO NOT EDIT.
// Source: information.proto

package server

import (
	"context"

	"go-micro/platform/information/rpc/information"
	"go-micro/platform/information/rpc/internal/logic/informationtopicservice"
	"go-micro/platform/information/rpc/internal/svc"
)

type InformationTopicServiceServer struct {
	svcCtx *svc.ServiceContext
	information.UnimplementedInformationTopicServiceServer
}

func NewInformationTopicServiceServer(svcCtx *svc.ServiceContext) *InformationTopicServiceServer {
	return &InformationTopicServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加文章
func (s *InformationTopicServiceServer) AddTopic(ctx context.Context, in *information.AddTopicRequest) (*information.AddTopicResponse, error) {
	l := informationtopicservicelogic.NewAddTopicLogic(ctx, s.svcCtx)
	return l.AddTopic(in)
}

// 获取文章
func (s *InformationTopicServiceServer) GetTopic(ctx context.Context, in *information.GetTopicRequest) (*information.GetTopicResponse, error) {
	l := informationtopicservicelogic.NewGetTopicLogic(ctx, s.svcCtx)
	return l.GetTopic(in)
}

// 获取文章列表
func (s *InformationTopicServiceServer) GetTopicList(ctx context.Context, in *information.GetTopicsRequest) (*information.GetTopicsResponse, error) {
	l := informationtopicservicelogic.NewGetTopicListLogic(ctx, s.svcCtx)
	return l.GetTopicList(in)
}

// 编辑文章
func (s *InformationTopicServiceServer) UpdateTopic(ctx context.Context, in *information.UpdateTopicRequest) (*information.UpdateTopicResponse, error) {
	l := informationtopicservicelogic.NewUpdateTopicLogic(ctx, s.svcCtx)
	return l.UpdateTopic(in)
}

// 删除文章
func (s *InformationTopicServiceServer) DeleteTopic(ctx context.Context, in *information.DeleteTopicRequest) (*information.DeleteTopicResponse, error) {
	l := informationtopicservicelogic.NewDeleteTopicLogic(ctx, s.svcCtx)
	return l.DeleteTopic(in)
}
